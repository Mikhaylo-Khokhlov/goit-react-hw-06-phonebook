{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/Section/Section.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","redux/filter/filter-actions.js","redux/filter/filter-selector.js","components/Filter/Filter.js","components/Section/Section.js","redux/contacts/contacts-selector.js","redux/contacts/contacts-actions.js","App.js","redux/contacts/contacts-reducer.js","redux/filter/filter-reducer.js","redux/store/store.js","index.js","components/ContactList/ContactListItem/ContactListItem.module.css"],"names":["module","exports","ContactForm","onSubmit","useState","name","setName","number","setNumber","nameInputId","shortid","generate","telInputId","handleChange","e","currentTarget","value","reset","className","s","form","preventDefault","block","label","htmlFor","type","onChange","id","input","placeholder","btnBlock","btn","ContactListItem","onDeleteContact","listItem","itemDesc","onClick","ContactList","contacts","list","map","contact","changeFilter","createAction","getFilter","state","filter","Filter","dispatch","useDispatch","useSelector","target","Section","children","container","getContacts","addContact","deleteContact","localstorageContacts","App","useEffect","contactsInStorage","localStorage","getItem","JSON","parse","setItem","stringify","findForbiddenName","forbiddenName","i","length","toLowerCase","findContact","normalizedFilter","includes","getFindContact","alert","contactId","createReducer","payload","_","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.81c1191b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__32aAt\",\"label\":\"Filter_label__2n69G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2tA_Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__1nKn4\",\"title\":\"Section_title__2SJHb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__ay_LP\",\"block\":\"ContactForm_block__20o96\",\"input\":\"ContactForm_input__2x6FE\",\"btnBlock\":\"ContactForm_btnBlock__1ZKs9\",\"btn\":\"ContactForm_btn__4duRk\",\"label\":\"ContactForm_label__1sZ68\"};","import { useState } from 'react';\nimport s from './ContactForm.module.css';\nimport shortid from 'shortid';\n\nexport default function ContactForm({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const nameInputId = shortid.generate();\n  const telInputId = shortid.generate();\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onSubmit({ name, number });\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <div className={s.block}>\n        <div className={s.label}>\n          <label htmlFor={nameInputId}>Name</label>\n        </div>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          id={nameInputId}\n          className={s.input}\n        />\n      </div>\n      <div className={s.block}>\n        <div className={s.label}>\n          <label htmlFor={telInputId}>Number</label>\n        </div>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          placeholder=\"+380 (00) 000-00-00\"\n          id={nameInputId}\n          className={s.input}\n        />\n      </div>\n      <div className={s.btnBlock}>\n        <div>\n          <button className={s.btn} type=\"submit\">\n            Add contact\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n}\n","import PropTypes from 'prop-types';\nimport s from './ContactListItem.module.css';\n\nconst ContactListItem = ({ name, number, id, onDeleteContact }) => {\n  return (\n    <li className={s.listItem}>\n      <p className={s.itemDesc}>{name}:</p>\n      <p className={s.itemDesc}>{number}</p>\n      <button\n        className={s.btn}\n        type=\"button\"\n        onClick={() => onDeleteContact(id)}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactListItem.propTypes = {\n  number: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n};\n\nexport default ContactListItem;\n","import PropTypes from 'prop-types';\nimport ContactListItem from './ContactListItem';\nimport s from './ContactList.module.css';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <ul className={s.list}>\n      {contacts.map(contact => (\n        <ContactListItem\n          key={contact.id}\n          id={contact.id}\n          name={contact.name}\n          number={contact.number}\n          onDeleteContact={onDeleteContact}\n        />\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = { contacts: PropTypes.array };\n\nexport default ContactList;\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const changeFilter = createAction('filter/change');\n","export const getFilter = state => state.filter;\n","import s from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from '../../redux/filter/filter-actions';\nimport { getFilter } from '../../redux/filter/filter-selector';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const onChange = e => {\n    const { value } = e.target;\n    dispatch(changeFilter(value));\n  };\n  return (\n    <>\n      <div>\n        <label className={s.label} htmlFor=\"filter\">\n          Find contacts by name\n        </label>\n      </div>\n      <input\n        type=\"text\"\n        id=\"filter\"\n        name=\"filter\"\n        value={filter}\n        onChange={onChange}\n        className={s.input}\n      />\n    </>\n  );\n}\n","import s from './Section.module.css';\n\nconst Section = ({ children }) => (\n  <section className={s.container}>{children}</section>\n);\n\nexport default Section;\n","export const getContacts = state => state.contacts;\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const addContact = createAction('contacts/add');\nexport const deleteContact = createAction('contacts/delete');\nexport const localstorageContacts = createAction('contacts/set');\n","import ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\nimport Section from './components/Section';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from './redux/filter/filter-selector';\nimport { getContacts } from './redux/contacts/contacts-selector';\nimport {\n  addContact,\n  deleteContact,\n  localstorageContacts,\n} from './redux/contacts/contacts-actions';\n\nexport default function App() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n\n  useEffect(() => {\n    const contactsInStorage = localStorage.getItem('contacts');\n\n    if (contactsInStorage) {\n      dispatch(localstorageContacts(JSON.parse(contactsInStorage)));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContacts = ({ name, number }) => {\n    const identicalName = findForbiddenName(name);\n\n    if (identicalName === false) {\n      dispatch(addContact({ name, number }));\n    } else {\n      alert(name + ' ' + 'is already in contacts');\n    }\n  };\n\n  const findForbiddenName = name => {\n    let forbiddenName = false;\n    for (let i = 0; i < contacts.length; i += 1) {\n      const normalizeContactsName = contacts[i].name.toLowerCase();\n      const normalizeName = name.toLowerCase();\n      if (normalizeContactsName === normalizeName) {\n        return (forbiddenName = true);\n      } else {\n        forbiddenName = false;\n      }\n    }\n    return forbiddenName;\n  };\n\n  const deleteContacts = contactId => {\n    dispatch(deleteContact({ contactId }));\n  };\n\n  const getFindContact = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  const findContact = getFindContact();\n\n  return (\n    <Section>\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={addContacts} />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList contacts={findContact} onDeleteContact={deleteContacts} />\n    </Section>\n  );\n}\n","import { createReducer } from '@reduxjs/toolkit';\nimport {\n  addContact,\n  deleteContact,\n  localstorageContacts,\n} from './contacts-actions';\nimport shortid from 'shortid';\n\nexport const contacts = createReducer([], {\n  [addContact]: (state, { payload }) => [\n    ...state,\n    { id: shortid.generate(), name: payload.name, number: payload.number },\n  ],\n  [localstorageContacts]: (_, { payload }) => payload,\n  [deleteContact]: (state, { payload }) =>\n    state.filter(contact => contact.id !== payload.contactId),\n});\n","import { createReducer } from '@reduxjs/toolkit';\nimport { changeFilter } from './filter-actions';\n\nexport const filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport { contacts } from '../contacts/contacts-reducer';\nimport { filter } from '../filter/filter-reducer';\n\nexport const store = configureStore({\n  reducer: {\n    contacts,\n    filter,\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store/store';\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactListItem_listItem__FHfTI\",\"itemDesc\":\"ContactListItem_itemDesc__3I0iy\",\"btn\":\"ContactListItem_btn__OqfAL\"};"],"sourceRoot":""}